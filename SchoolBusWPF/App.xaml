<Application x:Class="SchoolBusWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:local="clr-namespace:SchoolBusWPF"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
            xmlns:system="clr-namespace:System;assembly=mscorlib"
            xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--<Style x:Key="TextBlock" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
                
            </Style>-->

            <!--<Style x:Key="ComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
                
            </Style>-->

            <Style x:Key="NavigationButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="Orange" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Margin" Value="0 10" />
                <Setter Property="wpf:ButtonAssist.CornerRadius" Value="15" />
            </Style>

            <Style x:Key="CRUDButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="Background" Value="DodgerBlue" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="wpf:ButtonAssist.CornerRadius" Value="5" />
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <!--<Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Bottom" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:DataGridAssist.ColumnHeaderPadding)}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <DockPanel>
                                <Thumb x:Name="PART_HeaderGripper" Margin="0,0,-8,0"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource MaterialDesignGridViewColumnHeaderGripper}" />
                                <Border x:Name="HeaderBorder"
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter x:Name="HeaderContent"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextBlock.FontWeight" Value="Medium" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="Floating">
                        <Setter Property="Opacity" Value="0.7" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <DockPanel Name="PART_FloatingHeaderCanvas">
                                        <Border BorderBrush="Black" BorderThickness="1" />
                                    </DockPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="Padding">
                        <Setter Property="Opacity" Value="0.7" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Canvas Name="PART_FloatingHeaderCanvas" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>-->

            <Style x:Key="TextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Orange" />
                <Setter Property="CaretBrush" Value="Black" />
                <Setter Property="materialDesign:HintAssist.Foreground" Value="Orange" />
            </Style>

            <Style x:Key="PasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Orange" />
                <Setter Property="CaretBrush" Value="Black" />
            </Style>

            <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Orange" />
            </Style>
            
            <Style x:Key="DatePickerTextBox" TargetType="{x:Type DatePickerTextBox}" BasedOn="{StaticResource MaterialDesignDatePickerTextBox}">
                <Setter Property="CaretBrush" Value="Black" />
            </Style>

            <Style x:Key="MaterialDesignDatePicker" TargetType="{x:Type DatePicker}">
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="CalendarStyle" Value="{StaticResource MaterialDesignDatePickerCalendarPortrait}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="IsTodayHighlighted" Value="True" />
                <Setter Property="Padding" Value="{x:Static wpf:Constants.TextBoxDefaultPadding}" />
                <Setter Property="SelectedDateFormat" Value="Short" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <ControlTemplate.Resources>
                                <ControlTemplate x:Key="CalendarButtonTemplate" TargetType="{x:Type Button}">
                                    <wpf:PackIcon VerticalAlignment="Center"
                                        Background="Transparent"
                                        Foreground="{TemplateBinding Foreground}"
                                        Kind="Calendar" />
                                </ControlTemplate>
                            </ControlTemplate.Resources>
                            <Grid x:Name="PART_Root">
                                <DatePickerTextBox x:Name="PART_TextBox"
                                    Padding="{TemplateBinding Padding, Converter={StaticResource DatePickerTextBoxPaddingConverter}}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    wpf:HintAssist.FloatingOffset="{TemplateBinding wpf:HintAssist.FloatingOffset}"
                                    wpf:HintAssist.FloatingScale="{TemplateBinding wpf:HintAssist.FloatingScale}"
                                    wpf:HintAssist.FontFamily="{TemplateBinding wpf:HintAssist.FontFamily}"
                                    wpf:HintAssist.Foreground="{TemplateBinding wpf:HintAssist.Foreground}"
                                    wpf:HintAssist.Background="{TemplateBinding wpf:HintAssist.Background}"
                                    wpf:HintAssist.HelperText="{TemplateBinding wpf:HintAssist.HelperText}"
                                    wpf:HintAssist.HelperTextFontSize="{TemplateBinding wpf:HintAssist.HelperTextFontSize}"
                                    wpf:HintAssist.HelperTextStyle="{TemplateBinding wpf:HintAssist.HelperTextStyle}"
                                    wpf:HintAssist.Hint="{TemplateBinding wpf:HintAssist.Hint}"
                                    wpf:HintAssist.HintOpacity="{TemplateBinding wpf:HintAssist.HintOpacity}"
                                    wpf:HintAssist.IsFloating="{TemplateBinding wpf:HintAssist.IsFloating}"
                                    wpf:TextFieldAssist.DecorationVisibility="{TemplateBinding wpf:TextFieldAssist.DecorationVisibility}"
                                    wpf:TextFieldAssist.HasClearButton="{TemplateBinding wpf:TextFieldAssist.HasClearButton}"
                                    wpf:TextFieldAssist.HasFilledTextField="{TemplateBinding wpf:TextFieldAssist.HasFilledTextField}"
                                    wpf:TextFieldAssist.HasOutlinedTextField="{TemplateBinding wpf:TextFieldAssist.HasOutlinedTextField}"
                                    wpf:TextFieldAssist.NewSpecHighlightingEnabled="{TemplateBinding wpf:TextFieldAssist.NewSpecHighlightingEnabled}"
                                    wpf:TextFieldAssist.PrefixText="{TemplateBinding wpf:TextFieldAssist.PrefixText}"
                                    wpf:TextFieldAssist.RippleOnFocusEnabled="{TemplateBinding wpf:TextFieldAssist.RippleOnFocusEnabled}"
                                    wpf:TextFieldAssist.SuffixText="{TemplateBinding wpf:TextFieldAssist.SuffixText}"
                                    wpf:TextFieldAssist.TextBoxViewMargin="{TemplateBinding wpf:TextFieldAssist.TextBoxViewMargin}"
                                    wpf:TextFieldAssist.TextFieldCornerRadius="{TemplateBinding wpf:TextFieldAssist.TextFieldCornerRadius}"
                                    wpf:TextFieldAssist.UnderlineBrush="Orange"
                                    wpf:TextFieldAssist.UnderlineCornerRadius="{TemplateBinding wpf:TextFieldAssist.UnderlineCornerRadius}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Focusable="{TemplateBinding Focusable}"
                                    Style="{DynamicResource DatePickerTextBox}" />
                                <Button x:Name="PART_Button"
                                    Height="16"
                                    Margin="{TemplateBinding Padding, Converter={StaticResource PartButtonMarginConverter}}"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment, Converter={StaticResource VerticalAlignmentConverter}}"
                                    Focusable="False"
                                    Foreground="{TemplateBinding BorderBrush}"
                                    Template="{StaticResource CalendarButtonTemplate}" />   
                                <Popup x:Name="PART_Popup"
                                    AllowsTransparency="True"
                                    CustomPopupPlacementCallback="{x:Static wpf:CustomPopupPlacementCallbackHelper.LargePopupCallback}"
                                    Placement="Custom"
                                    PlacementTarget="{Binding ElementName=PART_TextBox}"
                                    PopupAnimation="Fade"
                                    StaysOpen="False" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="VerticalAlignment" Value="Top" />
                                        <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Button" Property="Margin" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource PartButtonMarginConverterTop}}" />
                                </MultiTrigger>

                                <Trigger Property="wpf:TextFieldAssist.HasFilledTextField" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.TextBox.FilledBackground}" />
                                </Trigger>
                                <Trigger Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Header.Foreground}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="wpf:TextFieldAssist.HasFilledTextField" Value="False" />
                                        <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="True" />
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Button" Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="PART_Button" Property="Opacity" Value="{x:Static wpf:Constants.TextBoxNotEnabledOpacity}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.TextBox.OutlineInactiveBorder}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_TextBox" Property="IsKeyboardFocused" Value="True" />
                                        <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{Binding Path=(wpf:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}" />
                                </MultiTrigger>
                                <Trigger Property="wpf:CalendarAssist.IsHeaderVisible" Value="False">
                                    <Setter Property="CalendarStyle">
                                        <Setter.Value>
                                            <Style TargetType="Calendar" BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
                                                <Setter Property="wpf:CalendarAssist.IsHeaderVisible" Value="False" />
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="wpf:TextFieldAssist.HasFilledTextField" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.TextBox.HoverBackground}" />
                                </MultiTrigger>

                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.ValidationError}" />
                                    <Setter TargetName="PART_TextBox" Property="wpf:ValidationAssist.HasError" Value="True" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="wpf:HintAssist.Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
                <Setter Property="wpf:TextFieldAssist.TextBoxViewMargin" Value="{x:Static wpf:Constants.DefaultTextBoxViewMargin}" />
                <Setter Property="wpf:TextFieldAssist.UnderlineBrush" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
